#include <iostream>
#include <vector>
#include <unordered_set>
using namespace std;

vector<int> findPrefixCommonArray(const vector<int>& A, const vector<int>& B) {
    int n = A.size();
    unordered_set<int> seenA, seenB; // Track numbers seen in A and B
    vector<int> C(n, 0); // Result array
    int commonCount = 0; // Count of common elements

    for (int i = 0; i < n; ++i) {
        // Check if A[i] is already in seenB
        if (seenB.count(A[i])) {
            ++commonCount;
        }
        seenA.insert(A[i]);

        // Check if B[i] is already in seenA
        if (seenA.count(B[i])) {
            ++commonCount;
        }
        seenB.insert(B[i]);

        // Update C[i] with the current common count
        C[i] = commonCount;
    }

    return C;
}

int main() {
    vector<int> A = {1, 3, 2, 4};
    vector<int> B = {3, 1, 2, 4};
    vector<int> result = findPrefixCommonArray(A, B);

    for (int val : result) {
        cout << val << " ";
    }
    cout << endl;

    return 0;
}
